// ============================================================================
// Name        : Test.cpp
// Author      : Taha Mostafa
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
// ============================================================================

#include <bits/stdc++.h>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define cin_int(x)			scanf("%d",&x)
#define cin_char(x)			scanf("%c",&x)
#define cout_int(x)			printf("%d",x)
#define cout_int_ln(x)		printf("%d\n",x)
#define cout_char(x)		printf("%c",x)
#define cout_char_ln(x)		printf("%c\n",x)
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
 
typedef long long         ll;
const ll OO = 1e8;
 
const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1; }
 
#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;

int n;
int num[10010],memo[10010][10010];

// int LIS(int id,int prev)
// {
// 	if(id==n)
// 		return 0;
// 	int &m = memo[id][prev];
// 	if(m != -1)
// 		return m;
// 	m = LIS(id+1,prev);
	
// 	if((prev == n) || num[prev] >= num[id])
// 		m = max(m,LIS(id+1,id)+1);
// 	return m;
// }
int LDS(int id,int prev)
{
	if(id == n)
		return 0;
	int &m = memo[id][prev];
	if(m != -1)
		return m;
	m = LDS(id+1,prev);
	if(n == prev || num[prev] >= num[id])
		m = max(m,LDS(id+1,id)+1);
	return m;
}


int main() {

	#ifndef ONLINE_JUDGE
	freopen("input_here.in", "rt", stdin);
	#endif
		int T;
	int go(0),count(1);
	n=0;
		memset(memo,-1,sizeof memo);
	while(cin >> T) {
	    if(T == -1)
	    	{
	    		go++;
	    		 if(go == 2)
	    			break;
	    		// cout << n << endl;
	    		cout << "Test #" <<count <<":\n  maximum possible interceptions: " << LDS(0,n) << endl;;
	    		count++,n=0;
	    		memset(memo,-1,sizeof memo);
	    	}
	    else
	    	{if(go==1) cout << endl;go=0;}
	   
	    num[n++]=T;
	    
	}


return 0;
}

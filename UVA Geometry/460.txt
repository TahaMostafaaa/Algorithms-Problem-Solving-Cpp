// ============================================================================
// Name        : Test.cpp
// Author      : Taha Mostafa
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
// ============================================================================

#include <bits/stdc++.h>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define cin_int(x)			scanf("%d",&x)
#define cin_char(x)			scanf("%c",&x)
#define cout_int(x)			printf("%d",x)
#define cout_int_ln(x)		printf("%d\n",x)
#define cout_char(x)		printf("%c",x)
#define cout_char_ln(x)		printf("%c\n",x)
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
#define max(i,j)        ((i>j)?i:j)
 
typedef long long         ll;
const ll OO = 1e8;
 const int INF = (int)1e6;

const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1; }
 
#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
#define PI acos(-1)
typedef long double       LD;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;

bool collinear(int x1, int y1, int x2, int y2, int x3, int y3) {
  return (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2);
}
double toDegree(double radian)
{
	if(radian < 0) radian += 2*PI;
	return (radian*180/PI);
}
//[solving triangles]

LD fixAngle(LD A){
    return A > 1 ? 1 : (A < -1 ? -1 : A);
}
// law of sins
LD getSide_a_bAB(LD b, LD A, LD B){
    return (sin(A) * b) / sin(B);
}

LD getAngle_A_abB(LD a, LD b, LD B){
    return asin(fixAngle( (a * sin(B)) / b ));
}
// law of cosines
LD getAngle_A_abc(LD a, LD b, LD c){
    return acos(fixAngle( (b*b + c*c - a*a) / (2*b*c) ));
}
int main() {

	#ifndef ONLINE_JUDGE
	freopen("input_here.in", "rt", stdin);
	// freopen("output_here.out", "wt", stdout);
	#endif
	int x1,x2,y1,y2,x11,y11,x22,y22,t,X1,Y1,X2,Y2;
	cin >> t;
	while(t--) {

		cin >> x1 >> y1 >> x2 >> y2;
		cin >> x11 >> y11 >> x22 >> y22;
		X1 = max(x1,x11);
		Y1 = max(y1,y11);
		X2 = min(x2,x22);
		Y2 = min(y2,y22);
		if (X1<X2 && Y1<Y2)
		cout << X1 << " " << Y1  << " " << X2  << " " << Y2 << endl;
		else
			puts("No Overlap");


	    if(t!=0)
	    	puts("");
	}

	
	
	
return 0;

}

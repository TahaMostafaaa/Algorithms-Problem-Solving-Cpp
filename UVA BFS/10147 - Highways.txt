// ============================================================================
// Name        : Test.cpp
// Author      : Taha Mostafa
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
// ============================================================================

#include <bits/stdc++.h>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define cin_int(x)			scanf("%d",&x)
#define cin_char(x)			scanf("%c",&x)
#define cout_int(x)			printf("%d",x)
#define cout_int_ln(x)		printf("%d\n",x)
#define cout_char(x)		printf("%c",x)
#define cout_char_ln(x)		printf("%c\n",x)
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
#define max(i,j)        ((i>j)?i:j)
 
typedef long long         ll;
const ll OO = 1e11+2;
 const int INF = (int)1e6+2;

const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1; }
 
#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
#define PI acos(-1.00)
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;

int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};
double graph[752][752];
int xxs[752];
int yys[752];
int parent[752];
int V;
int minKey(double key[], bool mstSet[])
{
   double min = INT_MAX;
   int min_index;
   for (int v = 0; v < V; v++)
     if (mstSet[v] == false && key[v] < min)
         min = key[v], min_index = v;
   return min_index;
}
int printMST()
{
	bool done = 0;
   for (int i = 1; i < V; i++)
	   	if(graph[i][parent[i]] >= 0.0)
	   	{
	      printf("%d %d\n", i+1,parent[i]+1);
	      done=1;
	  	}
  if(!done) puts("No new highways need");
}
void primMST()
{
     double key[V+1];  
     bool mstSet[V+1];  
     for (int i = 0; i < V; i++)
        key[i] = INT_MAX, mstSet[i] = false;
    // memset(key,INT_MAX,sizeof key);
    // memset(mstSet,false,sizeof mstSet);

     key[0] = 0;     
     // parent[0] = -1;
     for (int count = 0; count < V; count++)
     {

        int u = minKey(key, mstSet);
 
        mstSet[u] = true;

        for (int v = 0; v < V; v++)
          if (mstSet[v] == false && graph[u][v] <  key[v])
             parent[v]  = u, key[v] = graph[u][v];
     }

     printMST();
 }
     
int main() {


	#ifndef ONLINE_JUDGE
	freopen("input_here.in", "rt", stdin);
	// freopen("output_here.out", "wt", stdout);
	#endif
	
	int T,n,m,x,y,cost;
	cin_int(T);
	while(T--)
	{
		cin_int(n);
		V = n;
		for (int i = 0; i < n; ++i)
			scanf("%d%d",&xxs[i],&yys[i]);
		for (int i = 0; i < n; ++i)
		{
			for (int j = i+1; j < n; ++j)
		graph[i][j] = graph[j][i] =sqrt((xxs[j]-xxs[i])*(xxs[j]-xxs[i]) + (yys[j]-yys[i])*(yys[j]-yys[i]) );
		graph[i][i] = 0;
		}
		cin_int(m);
		for (int i = 0; i < m; ++i)
		{
			scanf("%d%d",&x,&y);
			x--,y--;
			graph[x][y] = graph[y][x] = -1.0;
		}
		primMST();
				// cout << "?" << endl;
		if(T)
			cout << endl;

	}
return 0;
}